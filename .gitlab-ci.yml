stages:
  - test
  - build
  - tag_image
  - deploy

variables:
  BUILD_ARG_1: BRANCH=${CI_BUILD_REF_NAME}
  NO_CACHE: DISABLE_CACHE

pep8:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epep8

py27:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epy27

#py35:
#  stage: test
#  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
#  except:
#    - tags
#  script:
#    - cd $CI_PROJECT_DIR
#    - scl enable rh-python35 'tox -epy35'

rpmbuild:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/rpmbuild.sh | bash

kojicheck:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojicheck.sh | bash

#imgbuild:
#  stage: build
#  image: gitlab-registry.cern.ch/cloud/fedora-buildah:rawhide
#  except:
#    - tags
#  script:
#    - git clone https://git.openstack.org/openstack/loci.git /tmp/loci && cd /tmp/loci
#    - buildah --storage-driver vfs bud --isolation chroot --build-arg FROM=centos:7 --build-arg PROJECT=$CI_PROJECT_NAME --build-arg WHEELS=loci/requirements:master-centos --build-arg PROJECT_REPO=$CI_REPOSITORY_URL --build-arg PROJECT_REF=$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
#    - buildah --storage-driver vfs push --creds gitlab-ci-token:$CI_BUILD_TOKEN $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA docker://$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
#    - buildah --storage-driver vfs rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

imgbuild:
  stage: build
  tags:
    - docker-image-build
  script: "echo" # unused but this line is required by GitLab CI
  variables:
    TO: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA


img-tag-latest:
  stage: tag_image
  image: gitlab-registry.cern.ch/cloud/fedora-buildah:rawhide
  script:
    - >-
        curl
        --silent
        --user svcbuild:${SVCBUILD_PASSWORD}
        -H "Accept: application/json"
        -d account=
        -d client_id=docker
        -d offline_token=true
        -d service=container_registry
        -d scope=repository:${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}:*
        -G https://gitlab.cern.ch/jwt/auth | jq .token -r > token.txt
    - TOKEN=$(cat token.txt)
    - >-
        curl
        --silent
        -X GET
        -H "Accept: application/vnd.docker.distribution.manifest.v2+json"
        -H "Authorization: Bearer ${TOKEN}"
        -G https://gitlab-registry.cern.ch/v2/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/manifests/$CI_COMMIT_SHA > manifest.json
    - >-
        curl
        -v
        -X PUT
        -H "Authorization: Bearer ${TOKEN}"
        -H "Accept: application/vnd.docker.distribution.manifest.v2+json"
        -H "Content-Type: application/vnd.docker.distribution.manifest.v2+json"
        -d @manifest.json
        https://gitlab-registry.cern.ch/v2/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/manifests/latest

kojiscratch:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - export SCRATCH=1
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash

kojibuild:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
    - export parser=(${CI_BUILD_TAG//-/ })
    - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
    - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
    - python setup.py egg_info
    - cp aardvark.egg-info/PKG-INFO .
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash
