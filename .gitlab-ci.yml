stages:
  - test
  - build
  - deploy

before_script:
  - if [ -z "$CI_BUILD_TAG" ]; then export CI_BUILD_TAG=$CI_DEFAULT_BUILD_TAG; fi
  - export parser=(${CI_BUILD_TAG//-/ })
  - sed -i s/CERN_VERSION_PLACEHOLDER/${parser[0]}/g openstack-aardvark.spec
  - sed -i s/CERN_RELEASE_PLACEHOLDER/${parser[1]}/g openstack-aardvark.spec
  - python setup.py egg_info
  - cp aardvark.egg-info/PKG-INFO .

pep8:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epep8

py27:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - tox -epy27

py35:
  stage: test
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/tox
  except:
    - tags
  script:
    - cd $CI_PROJECT_DIR
    - scl enable rh-python35 'tox -epy35'

rpmbuild:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/rpmbuild.sh | bash

kojiscratch:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  except:
    - tags
  script:
    - export SCRATCH=1
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash

kojicheck:
  stage: build
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojicheck.sh | bash

kojibuild:
  stage: deploy
  image: gitlab-registry.cern.ch/cloud-infrastructure/cci-scripts/rpm-builder:rocky
  only:
    - tags
  script:
    - curl https://gitlab.cern.ch/cloud-infrastructure/cloud-dev/raw/master/gitlab/kojibuild.sh | bash
