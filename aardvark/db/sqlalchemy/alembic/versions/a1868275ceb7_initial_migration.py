# Copyright (c) 2018 European Organization for Nuclear Research.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""initial migration

Revision ID: a1868275ceb7
Revises: None
Create Date: 2018-10-24 15:39:53.071968

"""

# revision identifiers, used by Alembic.
revision = 'a1868275ceb7'
down_revision = None

from alembic import op
import sqlalchemy as sa

from aardvark.db.sqlalchemy import models


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('instance_scheduling_event',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_uuid', sa.String(36), nullable=True),
    sa.Column('event_uuid', sa.String(36), nullable=True),
    sa.Column('handled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_uuid', 'handled',
                        name='uniq_scheduling0instance_uuid0handled')
    )
    op.create_table('scheduling_event',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(36), nullable=True),
    sa.Column('request_spec', models.JSONEncodedDict(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('request_id', name='uniq_req0request_id'),
    sa.UniqueConstraint('uuid', name='uniq_scheduling0uuid')
    )
    op.create_table('state_update_event',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(36), nullable=True),
    sa.Column('instance_uuid', sa.String(36), nullable=True),
    sa.Column('state_update', models.JSONEncodedDict(), nullable=True),
    sa.Column('image', sa.String(36), nullable=True),
    sa.Column('flavor', models.JSONEncodedDict(), nullable=True),
    sa.Column('handled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid', name='uniq_state_update0uuid')
    )
    # ### end Alembic commands ###
