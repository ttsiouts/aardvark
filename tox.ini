[tox]
minversion = 2.1
envlist = pep8,py{27,35},pip-missing-reqs
skipsdist = True

[testenv]
basepython =
    py27: python2.7
    py35: python3.5
    pep8: python2.7
usedevelop = True
whitelist_externals =
  bash
  find
  rm
  env
#install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  LANGUAGE=en_US
  LC_ALL=en_US.utf-8
  OS_STDOUT_CAPTURE=1
  OS_STDERR_CAPTURE=1
  OS_TEST_TIMEOUT=160
  PYTHONWARNINGS = ignore::UserWarning:psycopg2
deps = -r{toxinidir}/test-requirements.txt
commands =
  find . -type f -name "*.pyc" -delete
passenv =
  OS_DEBUG GENERATE_HASHES

[testenv:py27]
commands =
  {[testenv]commands}
  stestr run {posargs}
  stestr slowest

[testenv:py35]
commands =
  {[testenv]commands}
  stestr run --blacklist-file=tests-py3.txt {posargs}
  stestr slowest

[testenv:pep8]
description =
  Run style checks.
deps = {[testenv]deps}
envdir = {toxworkdir}/venv
commands =
  bash tools/flake8wrap.sh {posargs}

[flake8]
# E125 is deliberately excluded. See
# https://github.com/jcrocholl/pep8/issues/126. It's just wrong.
#
# Most of the whitespace related rules (E12* and E131) are excluded
# because while they are often useful guidelines, strict adherence to
# them ends up causing some really odd code formatting and forced
# extra line breaks. Updating code to enforce these will be a hard sell.
#
# H405 is another one that is good as a guideline, but sometimes
# multiline doc strings just don't have a natural summary
# line. Rejecting code for this reason is wrong.
#
# E251 Skipped due to https://github.com/jcrocholl/pep8/issues/301
enable-extensions = H106,H203,H904
ignore = E121,E122,E123,E124,E125,E126,E127,E128,E129,E131,E251,H405
exclude =  .venv,.git
# To get a list of functions that are more complex than 25, set max-complexity
# to 25 and run 'tox -epep8'.
# 34 is currently the most complex thing we have
# TODO(jogo): get this number down to 25 or so
max-complexity=25

[testenv:cover]
basepython = python2.7
envdir = {toxworkdir}/shared
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source aardvark --parallel-mode --rcfile .coveragerc
commands =
  {[testenv]commands}
  coverage erase
  stestr run {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml
  coverage report
